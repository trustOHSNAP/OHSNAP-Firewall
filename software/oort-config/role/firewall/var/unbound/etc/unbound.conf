# $OpenBSD: unbound.conf,v 1.21 2020/10/28 11:35:58 sthen Exp $

server:
	interface: 127.0.0.1
	#interface: 127.0.0.1@5353	# listen on alternative port
	interface: ::1
	interface: 192.168.8.1
	#interface: 192.168.4.1		# Theoretical Wi-Fi: wlan0
	#do-ip6: no

	# override the default "any" address to send queries; if multiple
	# addresses are available, they are used randomly to counter spoofing
	#outgoing-interface: 192.0.2.1
	#outgoing-interface: 2001:db8::53

	access-control: 192.168.8.0/24 allow
	#access-control: 192.168.4.0/24 allow
	access-control: 0.0.0.0/0 refuse
	access-control: 127.0.0.0/8 allow
	access-control: ::0/0 refuse
	access-control: ::1 allow

	hide-identity: yes
	hide-version: yes
	do-not-query-localhost: no

	# Perform DNSSEC validation.
	#
	auto-trust-anchor-file: "/var/unbound/db/root.key"
	val-log-level: 2

	# Synthesize NXDOMAINs from DNSSEC NSEC chains.
	# https://tools.ietf.org/html/rfc8198
	#
	aggressive-nsec: yes

	# Serve zones authoritatively from Unbound to resolver clients.
	# Not for external service.
	#
	#local-zone: "local." static
	#local-data: "mycomputer.local. IN A 192.0.2.51"
	#local-zone: "2.0.192.in-addr.arpa." static
	#local-data-ptr: "192.0.2.51 mycomputer.local"

	# Other config/hardening ideas
	# https://www.lonecpluspluscoder.com/2020/01/16/building-an-openbsd-wireguard-vpn-erver-part-2-unbound-dns-setup/
	# https://dnswatch.com/dns-docs/UNBOUND/
	# Blocking Ad Server domains. Google's AdSense, DoubleClick and Yahoo
  # account for a 70 percent share of all advertising traffic. Block them.
  local-zone: "doubleclick.net" redirect
  local-data: "doubleclick.net A 127.0.0.1"
  local-zone: "googlesyndication.com" redirect
  local-data: "googlesyndication.com A 127.0.0.1"
  local-zone: "googleadservices.com" redirect
  local-data: "googleadservices.com A 127.0.0.1"
  local-zone: "google-analytics.com" redirect
  local-data: "google-analytics.com A 127.0.0.1"
  local-zone: "ads.youtube.com" redirect
  local-data: "ads.youtube.com A 127.0.0.1"
  local-zone: "adserver.yahoo.com" redirect


	# Use TCP for "forward-zone" requests. Useful if you are making
	# DNS requests over an SSH port forwarding.
	#
	#tcp-upstream: yes

	# CA Certificates used for forward-tls-upstream (RFC7858) hostname
	# verification.  Since it's outside the chroot it is only loaded at
	# startup and thus cannot be changed via a reload.
	tls-cert-bundle: "/etc/ssl/cert.pem"

remote-control:
	control-enable: yes
	control-interface: /var/run/unbound.sock

# Use an upstream forwarder (recursive resolver) for some or all zones.
#
#forward-zone:
#	name: "."				# use for ALL queries
#	forward-addr: 1.1.1.1			# IP of the preferred upstream resolver
#	forward-first: yes			# try direct if forwarder fails

# Use an upstream DNS-over-TLS forwarder and do not fall back to cleartext
# if that fails.
forward-zone:
	name: "."
	forward-tls-upstream: yes		# use DNS-over-TLS forwarder
	forward-first: no			# do NOT send direct
  # the hostname after "#" is not a comment, it is used for TLS checks:
  # Cloudflare
	forward-addr: 2606:4700:4700::1111@853#cloudflare-dns.com
	forward-addr: 1.1.1.1@853#cloudflare-dns.com
	forward-addr: 2606:4700:4700::1001@853#cloudflare-dns.com
	forward-addr: 1.0.0.1@853#cloudflare-dns.com
  # Quad9
  #forward-addr: 2620:fe::fe@853#dns.quad9.net
  #forward-addr: 9.9.9.9@853#dns.quad9.net
  #forward-addr: 2620:fe::9@853#dns.quad9.net
  #forward-addr: 149.112.112.112@853#dns.quad9.net

  # TODO: Also add dnscrypt-proxy settings for DoH
	